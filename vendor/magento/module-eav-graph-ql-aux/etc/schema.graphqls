# Copyright Â© Magento, Inc. All rights reserved.
# See COPYING.txt for license details.

type Query {
    attributesMetadata(
        entityType: AttributeEntityTypeEnum! @doc(description: "The type of entity to search."),
        attributeUids:[ID!] = null @doc(description: "An array of attribute IDs to search."),
        showSystemAttributes: Boolean=false @doc(description: "Indicates whether to return matching system attributes as well.")):
    AttributesMetadata
    @resolver(class: "Magento\\EavGraphQlAux\\Model\\Resolver\\AttributesMetadata")
    @doc(description: "Return details about custom EAV attributes, and optionally, system attributes.")
}

type AttributesMetadata @doc(description: "Contains an array of custom and system attributes.") {
    items: [AttributeMetadataInterface] @doc(description: "An array of attributes.")
}

interface AttributeMetadataInterface @typeResolver(class: "Magento\\EavGraphQlAux\\Model\\TypeResolver\\AttributeMetadataInterfaceComposite") @doc(description: "An interface containing fields that define attributes."){
    uid: ID @doc(description: "The unique ID of an attribute.")
    code: String @doc(description: "The unique identifier for an attribute code. This value should be in lowercase letters without spaces.")
    label: String @doc(description: "The label assigned to the attribute.")
    attribute_labels: [StoreLabels] @resolver(class: "Magento\\EavGraphQlAux\\Model\\Resolver\\AttributeLabels") @doc(description: "An array of attribute labels defined for the current store.")
    data_type: ObjectDataTypeEnum @doc(description: "The data type of the attribute.")
    sort_order: Int @doc(description: "The relative position of the attribute.")
    is_system: Boolean @doc(description: "Indicates whether the attribute is a system attribute.")
    entity_type: AttributeEntityTypeEnum @doc(description: "The type of entity that defines the attribute.")
    ui_input: UiInputTypeInterface @doc(description: "Frontend UI properties of the attribute.")
}

interface UiInputTypeInterface @typeResolver(class: "Magento\\EavGraphQlAux\\Model\\TypeResolver\\UiInputComposite") @doc(description: "Defines frontend UI properties of an attribute.") {
    ui_input_type: UiInputTypeEnum @doc(description: "The frontend input type of the attribute.")
    is_html_allowed: Boolean @doc(description: "Indicates whether the attribute value allowed to have html content.")
}

interface AttributeOptionsInterface @typeResolver(class: "Magento\\EavGraphQlAux\\Model\\TypeResolver\\AttributeOptionsTypeInterface") @doc(description: "Defines attribute options.") {
    attribute_options: [AttributeOptionInterface]  @resolver(class: "Magento\\EavGraphQlAux\\Model\\Resolver\\AttributeOptions") @doc(description: "An array of attribute options.")
}

interface SelectableInputTypeInterface @typeResolver(class: "Magento\\EavGraphQlAux\\Model\\TypeResolver\\SelectableInputTypeInterface") @doc(description: "Defines selectable input types of the attribute.") {
    attribute_options: [AttributeOptionInterface] @doc(description: "An array of attribute options.")
}

interface AttributeOptionInterface @typeResolver(class: "Magento\\EavGraphQlAux\\Model\\TypeResolver\\AttributeOptionTypeInterface") @doc(description: "Defines attribute options.") {
    uid: ID! @doc(description: "The unique ID of an attribute option.")
    label: String @doc(description: "The label assigned to the attribute option.")
    is_default: Boolean @doc(description: "Indicates if option is set to be used as default value.")
}

type AttributeOptions implements AttributeOptionsInterface {
}

type AttributeOption implements AttributeOptionInterface {
}

type UiAttributeTypeSelect implements UiInputTypeInterface, AttributeOptionsInterface, SelectableInputTypeInterface {
}

type UiAttributeTypeMultiSelect implements UiInputTypeInterface, AttributeOptionsInterface, SelectableInputTypeInterface {
}

type UiAttributeTypeBoolean implements UiInputTypeInterface, AttributeOptionsInterface, SelectableInputTypeInterface {
}

type UiAttributeTypeAny implements UiInputTypeInterface {
}

type UiAttributeTypeTextarea implements UiInputTypeInterface {
}

type UiAttributeTypeTextEditor implements UiInputTypeInterface {
}

type StoreLabels @doc(description: "Contains the store code and label of an attribute.") {
    store_code: String @doc(description: "The assigned store code.")
    label: String @doc(description: "The label assigned to the attribute.")
}

enum AttributeEntityTypeEnum {
}

enum ObjectDataTypeEnum {
    STRING
    FLOAT
    INT
    BOOLEAN
    COMPLEX
}

enum UiInputTypeEnum {
    BOOLEAN
    DATE
    DATETIME
    GALLERY
    IMAGE
    MEDIA_IMAGE
    MULTISELECT
    PRICE
    SELECT
    TEXT
    TEXTAREA
    TEXTEDITOR
    WEIGHT
}

type CustomAttribute @doc(description: "Contains custom attribute value and metadata details.") {
    selected_attribute_options: SelectedAttributeOption @doc(description: "Attribute value represented as selected options using input type like select.")
    entered_attribute_value: EnteredAttributeValue @doc(description: "Attribute value represented as entered data using input type like text field.")
    attribute_metadata: AttributeMetadataInterface @doc(description: "Attribute metadata details.")
}

type SelectedAttributeOption {
    attribute_option: [AttributeOptionInterface!] @doc(description: "Selected attribute option details.")
}

type EnteredAttributeValue {
    value: String @doc(description: "Attribute value.")
}
